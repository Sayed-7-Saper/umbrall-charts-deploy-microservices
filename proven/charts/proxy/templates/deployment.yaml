apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "myservice.fullname" . }}
  labels:
    {{- include "myservice.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "myservice.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "myservice.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "myservice.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.global.ImageRegistry }}/{{ .Values.global.imagePath }}/proxy:{{ .Values.image.tag | default .Chart.AppVersion }}"
          #"{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SERVICE_ENDPOINT
              value: "/process_text"
          envFrom:
            - configMapRef:
                name: {{ include "myservice.fullname" . }}

          ports:
            - name: http
              containerPort: 8003
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /process_text
              port: 8003
              scheme: HTTP
#            initialDelaySeconds: 30
            #timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            tcpSocket:
              port: 8003
#            initialDelaySeconds: 30
            #timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3

              #  readinessProbe:
              # httpGet:
              # path: /health
              # port: 80
              # scheme: HTTP
              # initialDelaySeconds: 10
              # timeoutSeconds: 10
              # periodSeconds: 10
              #successThreshold: 1
              #failureThreshold: 3
              #livenessProbe:
              #tcpSocket:
              # port: 80
              #initialDelaySeconds: 10
              #timeoutSeconds: 1
              #periodSeconds: 10
              #successThreshold: 1
              #failureThreshold: 3

          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
